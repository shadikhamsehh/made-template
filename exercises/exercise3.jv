pipeline GoodsTransportPipeline {

    block GoodsExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block GoodsTextFileInterpreter oftype TextFileInterpreter {
        encoding: "latin3";
    }

    block GoodsTextRangeSelector oftype TextRangeSelector {
        lineFrom: 9;
    }

    block GoodsCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block GoodsHeaderWriter_AtoE oftype CellWriter {
        at: range A1:E1;
        write: ["year", "month", "goods_id", "goods_name", "goods_source"];
    }

    block GoodsHeaderWriter_ATtoAU oftype CellWriter {
        at: range AT1:AU1;
        write: ["abroad", "total"];
    }

    block GoodsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype PositiveInteger,
            "month" oftype GermanMonth,
            "goods_id" oftype GoodsId,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype PositiveInteger,
            "total" oftype PositiveInteger
        ];
    }

    block GoodsLoader oftype SQLiteLoader {
        table: "goods";
        file: "goodsTransportedByTrain.sqlite";
    }

    GoodsExtractor
        -> GoodsTextFileInterpreter
        -> GoodsTextRangeSelector
        -> GoodsCSVInterpreter
        -> GoodsHeaderWriter_AtoE
        -> GoodsHeaderWriter_ATtoAU
        -> GoodsTableInterpreter
        -> GoodsLoader;
}

constraint PositiveRange oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: false;
}

valuetype PositiveInteger oftype integer {
    constraints: [PositiveRange];
}

constraint MonthConstraint oftype AllowlistConstraint {
    allowlist: ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"];
}

valuetype GermanMonth oftype text {
    constraints: [MonthConstraint];
}

constraint GoodsIdConstraint oftype RegexConstraint {
    regex: /^NST7-[A-Z0-9]{3}$/;
}

valuetype GoodsId oftype text {
    constraints: [GoodsIdConstraint];
}
